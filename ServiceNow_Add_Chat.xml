<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2017-10-17 01:10:43">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<application_name>xMatters</application_name>
<application_scope>x_xma_xmatters</application_scope>
<application_version>4.0.2</application_version>
<collisions/>
<commit_date/>
<deleted/>
<description>Adds a checkbox and related code for opening a chat room. </description>
<inserted/>
<name>Add Chat to Engage</name>
<origin_sys_id/>
<release_date/>
<remote_sys_id>e7bdd06adb310300739cf00fbf961990</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>e9900d2adb710300739cf00fbf961925</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_ui_page_c65690b94f2822008472a88ca310c7c2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_page"&gt;&lt;sys_ui_page action="INSERT_OR_UPDATE"&gt;&lt;category&gt;general&lt;/category&gt;&lt;client_script/&gt;&lt;description/&gt;&lt;direct&gt;false&lt;/direct&gt;&lt;endpoint&gt;x_xma_xmatters_xm_engage_with_xmatters_content.do&lt;/endpoint&gt;&lt;html&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null"&gt;
&lt;script src="x_xma_xmatters.angular.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.angular-ui-bootstrap.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_app_engage_xmatters.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.angular.translate.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_glide_ajax.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_xmatters_service.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_location_service.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_options_provider.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.ng-tags-input.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_recipient_template.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.moment.min.jsdbx"&gt;&lt;/script&gt;
&lt;link href="//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.css" rel="stylesheet"&gt;&lt;/link&gt;
&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous"&gt;&lt;/link&gt;
&lt;style&gt;
	body {
		font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;
	        padding-top: 0;
	}
	.xm-label {
		font-size: 13px;
		font-weight: normal;
	}
	input.xm-tracked.ng-dirty, textarea.xm-tracked.ng-dirty {
		border: 1px orange solid;
	}
	form.ng-submitted input.ng-invalid, form.ng-submitted textarea.ng-invalid {
		border: 1px red solid;
	}
	a.xm-help {
		margin-left: 5px;
		display: inline-block !important;	
	}
	.ng-dirty .tags {
		/**border-color: orange; **/
	}
	.xm-tags-input-group .input-group-btn .btn {
	   height: 34px;
	}
	.tags {
	    border: 1px solid #ccc !important;
	}
	form.ng-submitted .ng-invalid .tags {
		border-color: red !important;
	}
	tags-input .tags {
	     box-shadow: none !important;
	}
	tags-input .tags .tag-item {
	    background: #445465;
	    border: 0;
	}
	tags-input .tags .tag-item .remove-button {
	    color: white;
	}
	tags-input .tags .tag-item .remove-button:hover {
	    color: #bec1c6;;
	}
	tags-input .tags .tag-item.selected {
		background-color: #ae1b1f;
	}
	.xm-input-group-btn {
		background-color: #f6f6f6;
		border: solid 1px #cccccc;
		width: 106px;
	}
	.xm-left {
	     float: left;
	}
	.xm-right {
	    float: right;
	}
	.xm-tag-feedback {
	   right: 10px;
	}
	.xm-error {
	   color: red;
	   font-size: 13px;
	}
	.xm-btn-default, .xm-btn-default:focus, .xm-btn-default:hover {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	    color: #343d47;
	    background-color: rgba(255, 255, 255, 0.45);
	    border-color: #bdc0c4;
	}
	tags-input .tags .tag-item {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	}
	tags-input .tags .input {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	}
	tags-input .autocomplete .suggestion-item {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	}
	h4.xm-header {
	     font-size: 21px;
	     font-weight: normal;
	     margin-top: 0;
	}
	.xm-left-icon {
	    margin-right: 5px;
	}
	.xm-right-icon {
	    margin-left: 0;
	}
	.xm-right-icon .remove-button .fa {
	     font-size: 14px;
	     vertical-align: text-top;
	}
	.form-control-feedback .fa {
	     color: rgb(52, 61, 71);
	}
	.xm-success-message {
	    max-width: 80%;
	    min-width: 375px;
	    padding: 0 40px;
	}
	.xm-cancel-button {
		margin-left: 15px;
	}
&lt;/style&gt;
&lt;div id="engage" ng-app="xm.engage-xm" class="container-fluid" ng-cloak=""&gt;
	&lt;div ng-controller="engageCtlr"&gt;
		&lt;div class="panel" ng-show="!is_finished"&gt;
		&lt;h4 class="xm-header"&gt;{{ 'ENGAGE_XM.TITLE' | translate }}&lt;/h4&gt;
		&lt;form name="engageXMForm" novalidate=""&gt;
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12 has-feedback" ng-class="engageXMForm.recipients.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.RECIPIENTS' | translate }}&lt;/label&gt;
					&lt;div class="input-group xm-tags-input-group"&gt;
						&lt;span class="input-group-btn"&gt;
							&lt;button type="button" class="btn btn-secondary xm-input-group-btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;
								&lt;span class="xm-left"&gt;{{ activeRecipientType.label | translate }}&lt;/span&gt;
								&lt;span class="xm-right"&gt;
									&lt;i class="fa fa-chevron-down"&gt;&lt;/i&gt;
								&lt;/span&gt;
							&lt;/button&gt;
							&lt;ul class="dropdown-menu"&gt;
								&lt;li ng-repeat="rType in recipientTypes"&gt;
									&lt;a href="#" ng-click="selectRecipientType( $index )"&gt;{{ rType.label | translate }}&lt;/a&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
						&lt;/span&gt;
						&lt;tags-input ng-model="recipients" id="recipients" name="recipients" required="required" template="x_xma_xmatters_xm_engage_recipient_template.do?sysparm_nostack=true"&gt;
							&lt;auto-complete source="activeRecipientType.typeahead($query)"&gt;&lt;/auto-complete&gt;
						&lt;/tags-input&gt;
					&lt;/div&gt;
					&lt;span class="form-control-feedback xm-tag-feedback" ng-show="xm_search_state.isSearching"&gt;
						&lt;i class="fa fa-spinner fa-spin fa-fw"&gt;&lt;/i&gt;
					&lt;/span&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.recipients.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="row"&gt;
				&lt;div class="form-group col-sm-6" ng-class="engageXMForm.send_priority.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.SEND_PRIORITY' | translate }}&lt;/label&gt;
					&lt;select class="form-control" ng-model="send_priority" id="send_priority" name="send_priority"&gt;
						&lt;option ng-repeat="priorityOpt in send_priority_options" value="{{priorityOpt.value}}" required="required"&gt;{{ priorityOpt.label | translate }}&lt;/option&gt;
					&lt;/select&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.send_priority.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
				&lt;div class="form-group col-sm-6"&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.CONFERENCE_BRIDGE' | translate }}&lt;/label&gt;
					&lt;select class="form-control" ng-model="conference_bridge"&gt;
						&lt;option value="None"&gt;{{ 'ENGAGE_XM.OPTIONS.CONFERENCE_BRIDGE.None' | translate }}&lt;/option&gt;
						&lt;optgroup label="{{ 'ENGAGE_XM.OPTIONS.CONFERENCE_BRIDGE.Hosted_Category' | translate }}"&gt;
							&lt;option ng-repeat="bridgeOpt in hosted_conference_bridge_options" value="{{bridgeOpt.value}}"&gt;{{ bridgeOpt.label | translate }}&lt;/option&gt;
						&lt;/optgroup&gt;
						&lt;optgroup label="{{ 'ENGAGE_XM.OPTIONS.CONFERENCE_BRIDGE.External_Category' | translate }}" ng-if="external_conference_bridge_options.length &gt; 0"&gt;
							&lt;option ng-repeat="bridgeOpt in external_conference_bridge_options" value="{{bridgeOpt.value}}"&gt;{{ bridgeOpt.label | translate }}&lt;/option&gt;
						&lt;/optgroup&gt;
					&lt;/select&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			
			&lt;div class="row"&gt;
				&lt;div class="form-group col-sm-6"&gt;
					
				&lt;/div&gt;
				&lt;div class="form-group col-sm-6"&gt;
					&lt;label class="xm-label"&gt;Post to Chat?&lt;/label&gt;
					&lt;input type="checkbox" ng-model="chat" id="chat" name="chat" class="form-control" /&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12" ng-class="engageXMForm.subject.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.SUBJECT' | translate }}&lt;/label&gt;
					&lt;input type="text" class="form-control" ng-model="subject" id="subject" name="subject" required="required" ng-maxlength="200" /&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.subject.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
						&lt;div ng-message="maxlength"&gt;{{ 'ENGAGE_XM.ERROR.MAX_LENGTH' | translate:'{ max_length: 200 }' }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12" ng-class="engageXMForm.message.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.MESSAGE' | translate }}&lt;/label&gt;
					&lt;textarea class="form-control" ng-model="message" id="message" name="message" required="required" ng-maxlength="2000" /&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.message.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
						&lt;div ng-message="maxlength"&gt;{{ 'ENGAGE_XM.ERROR.MAX_LENGTH' | translate:'{ max_length: 2000 }' }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="row"&gt;
				&lt;div class="col-md-4"&gt;
					&lt;button class="btn btn-default xm-btn-default" ng-click="submit()"&gt;{{ 'ENGAGE_XM.BUTTON.SUBMIT' | translate }}&lt;/button&gt;
					&lt;button class="btn btn-default xm-btn-default xm-cancel-button" type="button" ng-click="cancel()"&gt;{{ 'ENGAGE_XM.BUTTON.CANCEL' | translate }}&lt;/button&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/form&gt;
		&lt;/div&gt;
		&lt;div class="panel" ng-if="is_finished"&gt;
			&lt;h4 class="xm-header"&gt;{{ 'ENGAGE_XM.TITLE' | translate }}&lt;/h4&gt;
			&lt;div class="row"&gt;
				&lt;div class="col-md-8 xm-success-message"&gt;
					&lt;p&gt;{{ 'ENGAGE_XM.MESSAGE.SUCCESS' | translate }}&lt;/p&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;a href="{{engage_url}}" target="_top" class="btn btn-default xm-btn-default"&gt;{{ 'ENGAGE_XM.BUTTON.VIEW_RECORD' | translate }}&lt;/a&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/j:jelly&gt;]]&gt;&lt;/html&gt;&lt;name&gt;xm_engage_with_xmatters_content&lt;/name&gt;&lt;processing_script/&gt;&lt;sys_class_name&gt;sys_ui_page&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-07-11 18:30:00&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;c65690b94f2822008472a88ca310c7c2&lt;/sys_id&gt;&lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;&lt;sys_name&gt;xm_engage_with_xmatters_content&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_page_c65690b94f2822008472a88ca310c7c2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-10-17 00:47:16&lt;/sys_updated_on&gt;&lt;/sys_ui_page&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>21900d2adb710300739cf00fbf961927</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table/>
<target_name>xm_engage_with_xmatters_content</target_name>
<type>UI Page</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_xma_xmatters_engage_with_xmatters_chat</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="chat" table="x_xma_xmatters_engage_with_xmatters"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Chat&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;chat&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;x_xma_xmatters_engage_with_xmatters&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-10-17 00:36:12&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;fd98f066db710300739cf00fbf96190f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Chat&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_xma_xmatters_engage_with_xmatters_chat&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-10-17 00:36:12&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>25900d2adb710300739cf00fbf961926</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table>x_xma_xmatters_engage_with_xmatters</table>
<target_name>Engage with xMatters.Chat</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_script_include_99e580794f2822008472a88ca310c7fd</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_xma_xmatters.xMattersAjaxEngage&lt;/api_name&gt;&lt;client_callable&gt;true&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;xMattersAjaxEngage&lt;/name&gt;&lt;script&gt;&lt;![CDATA[gs.include("xMattersConfig");
gs.include("xMattersDataHelper");

var xMattersAjaxEngage = Class.create();
xMattersAjaxEngage.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	/**
	 * Retrieves xMatters configuration details used to make calls from the browser client.
	 * Currently unused because xmApi doesn't support cross-browser calls right now
	 *
	 * @return {String} A stringified JSON object with the following details:
	 * {
	 * 		"success": true or false depending on whether the request was successful,
	 * 		"log": an array of strings used to debug the request,
	 * 		"error": only present if "success" = false - a string describing what went wrong,
	 * 		"data": only present if "success" = true - an object with the following properties:
	 * 			{
	 * 				"host": the configured xMatters hostname,
	 * 				"baseAuth": the Basic Authentication credentials configured to be used by the integration
	 * 					to communicate with xMatters
	 * 			}
	 * }
	 */
	getXMattersDetails: function() {
		var response;
		var customLog = [];
		try {
			var conf = new xMattersConfig();
			var hostname = conf.XMAPI.hostname;
			var user = conf.XMAPI.user;
			var password = conf.XMAPI.password;

			var isValid = true;
			if( typeof hostname === 'undefined' || hostname === null || hostname.trim() === '' ) {
				isValid = false;
				customLog.push( 'Invalid hostname: ' + hostname );
			}
			if( typeof user === 'undefined' || user === null || user.trim() === '' ) {
				isValid = false;
				customLog.push( 'Invalid user: ' + user );
			}
			if( typeof password === 'undefined' || password === null || password.trim() === '') {
				isValid = false;
				customLog.push( 'Invalid password: ' + password );
			}
			if( isValid ) {
				response = {
					success: true,
					data: {
						host: hostname,
						baseAuth: gs.base64Encode( user + ':' + password )
					}
				};
			} else {
				response = {
					success: false,
					error: "Problems exist in the xMatters API configuration"
				};
			}
		} catch( e ) {
			response = {
				success: false,
				error: String( e )
			};
		}
		response.log = customLog;
		return new global.JSON().encode( response );
	},

	/**
	 * Retrieves the configured External Conference Bridges
	 *
	 * @return {String} A stringified JSON object with the following details:
	 * {
	 * 		"success": true or false depending on whether the request was successful,
	 * 		"log": an array of strings used to debug the request,
	 * 		"error": only present if "success" = false - a string describing what went wrong,
	 * 		"data": only present if "success" = true - an object that will contain the external conference bridges as text
	 * }
	 */
	getExternalConferenceBridges: function() {
		var response;
		var customLog = [];
		try {
			var conf = new xMattersConfig();
			response = {
				success: true,
				data: conf.ENGAGE.EXTERNAL_BRIDGES
			};
		} catch( e ) {
			response = {
				success: false,
				error: String( e )
			};
		}
		response.log = customLog;
		return new global.JSON().encode( response );
	},

    getActiveHostedConferenceBridges: function() {
        var response;
        var opts;
        var activeConferenceBridgesData = {};

        try {
            var conf = new xMattersConfig();
            var incidentId = this.getParameter( 'incident_id' );
            opts = {
                "method": "GET",
                "path": "/api/xm/1/events?status=ACTIVE&amp;sortBy=start_time&amp;propertyName=sys_id%23" + conf.EVENTS.LANGUAGE + "&amp;propertyValue=" + incidentId,
                "headers": {
                    "Content-Type": "application/json"
                }
            };
            var dataHelper = new xMattersDataHelper();
            var apiResp = dataHelper.sendRequest( opts );
            if( apiResp.status &gt;= 200 &amp;&amp; apiResp.status &lt; 300 &amp;&amp; apiResp.body ) {
                var apiRespBody = JSON.parse(apiResp.body);

                if (apiRespBody.data &amp;&amp; Array.isArray(apiRespBody.data)) {
                    var conferenceBridgeIds = [];
                    for (var i = 0; i &lt; apiRespBody.data.length; i++) {
                        var dataItem = apiRespBody.data[i];
                        if (dataItem.conference &amp;&amp; dataItem.conference.bridgeId &amp;&amp;
							conferenceBridgeIds.indexOf(dataItem.conference.bridgeId) &lt; 0) {
                            conferenceBridgeIds.push(dataItem.conference.bridgeId);
                        }
                    }
                    var activeConferenceBridgesResponse = JSON.parse(this.getActiveConferenceBridges(conferenceBridgeIds));
                    if (activeConferenceBridgesResponse.success) {
                        response = {
                            success: true,
                            data: activeConferenceBridgesResponse.data
                        };
					} else {
                    	return activeConferenceBridgesResponse;
					}
                }

            } else {
                response = {
                    success: false,
                    api_response: apiResp,
                    error: 'The call to xMatters was unsuccessful'
                };
            }
        } catch( e ) {
            response = {
                success: false,
                opts: opts,
                error: String( e )
            };
        }
        return new global.JSON().encode( response );
	},

    /**
	 * Get a list of bridges that are still ongoing
     * @param {[]} conferenceBridgeIds: a list of conference bridge ids
	 * @returns {{}} A list of bridges, or failure response.
     */
    getActiveConferenceBridges: function(conferenceBridgeIds) {
        var response;
        var opts;
        var activeConferenceBridges = [];
        var dataHelper = new xMattersDataHelper();

        try {
        	for (var i = 0; i &lt; conferenceBridgeIds.length; i++) {
                opts = {
                    "method": "GET",
                    "path": "/api/xm/1/conferences/" + conferenceBridgeIds[i],
                    "headers": {
                        "Content-Type": "application/json"
                    }
                };
                var apiResp = dataHelper.sendRequest( opts );
                if( apiResp.status &gt;= 200 &amp;&amp; apiResp.status &lt; 300 &amp;&amp; apiResp.body) {
                	var apiRespBody = JSON.parse(apiResp.body);
                    if (apiRespBody.status &amp;&amp; apiRespBody.status !== "INACTIVE") {
                        activeConferenceBridges.push(apiRespBody);
                    }
                } else {
                    response = {
                        success: false,
                        api_response: apiResp,
                        error: 'The call to xMatters was unsuccessful'
                    };
                    return new global.JSON().encode( response );
                }
            }
            response = {
                success: true,
                data: activeConferenceBridges
            };
		} catch( e ) {
			response = {
				success: false,
				opts: opts,
				error: String( e )
			};
		}

        return new global.JSON().encode( response );
    },

	/**
	 * Searches xMatters for people via the search people xmAPI endpoint
	 * When called from glide ajax, must have a string "search_term" parameter.
	 *
	 * @return {String} A stringified JSON object with the following details:
	 * {
	 * 		"success": true or false depending on whether the submission was successful,
	 * 		"opts": an object that will contain the details of the http callout,
	 * 		"error": only present if "success" = false - a string describing what went wrong,
	 * 		"api_response": only present if "success" = false - will contain the http response in a failed http call,
	 * 		"data": only present if "success" = true - will contain the http response in a successfull http call
	 * }
	 */
	searchPeople: function(){
		var response;
		var opts;
		try {
			var search_term = this.getParameter( 'search_term' );
			opts = {
				"method": "GET",
				"path": "/api/xm/1/people?search=" + search_term,
				"headers": {
					"Content-Type": "application/json"
				}
			};
			var dataHelper = new xMattersDataHelper();
			var apiResp = dataHelper.sendRequest( opts );
			if( apiResp.status &gt;= 200 &amp;&amp; apiResp.status &lt; 300 ) {
				response = {
					success: true,
					data: apiResp
				};
			} else {
				response = {
					success: false,
					api_response: apiResp,
					error: 'The call to xMatters was unsuccessful'
				};
			}
		} catch( e ) {
			response = {
				success: false,
				opts: opts,
				error: String( e )
			};
		}
		return new global.JSON().encode( response );
	},

	/**
	 * Searches xMatters for groups via the search groups xmAPI endpoint
	 * When called from glide ajax, must have a string "search_term" parameter.
	 *
	 * @return {String} A stringified JSON object with the following details:
	 * {
	 * 		"success": true or false depending on whether the submission was successful,
	 * 		"opts": an object that will contain the details of the http callout,
	 * 		"error": only present if "success" = false - a string describing what went wrong,
	 * 		"api_response": only present if "success" = false - will contain the http response in a failed http call,
	 * 		"data": only present if "success" = true - will contain the http response in a successfull http call
	 * }
	 */
	searchGroups: function(){
		var response;
		var opts;
		try {
			var search_term = this.getParameter( 'search_term' );
			var dataHelper = new xMattersDataHelper();
			opts = {
				"method": "GET",
				"path": "/api/xm/1/groups?search=" + search_term,
				"headers": {
					"Content-Type": "application/json"
				}
			};
			var apiResp = dataHelper.sendRequest( opts );
			if( apiResp.status &gt;= 200 &amp;&amp; apiResp.status &lt; 300 ) {
				response = {
					success: true,
					data: apiResp
				};
			} else {
				response = {
					success: false,
					api_response: apiResp,
					error: 'The call to xMatters was unsuccessful'
				};
			}
		} catch( e ) {
			response = {
				success: false,
				error: String( e )
			};
		}
		response.opts = opts;
		return new global.JSON().encode( response );
	},

	/**
	 * Submits a new Engage with xMatters record in ServiceNow (note that this does not perform any communication between ServiceNow and xMatters)
	 * When called from glide ajax, must have a stringified "form_data" parameter. This parameter should look like the following:
	 * 	{
	 * 		"recipients": semi-colon delimited list of recipient target names,
	 * 		"message": the message,
	 * 		"incident_id": System ID of Parent Incident,
	 * 		"subject": the subject,
	 * 		"send_priority": the send priority,
	 * 		"conference_bridge": Optional Conference Bridge
	 * 	}
	 *
	 * @return {String} A stringified JSON object with the following details:
	 * {
	 * 		"success": true or false depending on whether the submission was successful,
	 * 		"error": only present if "success" = false - a string describing what went wrong,
	 * 		"data": only present if "success" = true - an object with the following properties:
	 * 			{
	 * 				"sys_id": the id of the new Engage with xMatters record
	 * 			}
	 * }
	 */
	submitEngageWithXMatters: function() {
		var response;
		try {
			var form_data = this.getParameter( 'form_data' );
			var formData = new global.JSON().decode( form_data );
gs.info( 'Engage form_data: ' + form_data );
			
			var engageRequest = new GlideRecord( 'x_xma_xmatters_engage_with_xmatters' );
			engageRequest.initialize();
			engageRequest.recipients = formData.recipients;
			engageRequest.message = formData.message;
			engageRequest.parent_incident = formData.incident_id;
			engageRequest.message_subject = formData.subject;
			engageRequest.send_priority = formData.send_priority;
			engageRequest.conference_bridge = formData.conference_bridge;
			engageRequest.chat = formData.chat;
			engageRequest.insert();

			response = {
				success: true,
				data: { sys_id: String( engageRequest.sys_id ) }
			};
		} catch( e ) {
			response = {
				success: false,
				error: String( e )
			};
		}
		return new global.JSON().encode( response );
	},

    type: 'xMattersAjaxEngage'
});]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-07-11 17:18:47&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;99e580794f2822008472a88ca310c7fd&lt;/sys_id&gt;&lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;&lt;sys_name&gt;xMattersAjaxEngage&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_99e580794f2822008472a88ca310c7fd&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-10-17 00:53:19&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>6d900d2adb710300739cf00fbf961926</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table/>
<target_name>xMattersAjaxEngage</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_script_include_38d205cb7b02f1008e0b707d784d4dad</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_xma_xmatters.xMattersTask&lt;/api_name&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description&gt;Business level object to deal with sending tasks to the xMattersRESTHelper.sendAddTaskRESTMessage.&lt;/description&gt;&lt;name&gt;xMattersTask&lt;/name&gt;&lt;script&gt;&lt;![CDATA[gs.include("xMattersLogger");
gs.include("xMattersConfig");
gs.include('xMattersDataHelper');
gs.include("xMattersEvent");

var xMattersTask = Class.create();

xMattersTask.prototype = {

    /**
     * Initialize the xMattersTask object
     *
     * @param {Object} config (optional) config object for the xMatters app; will default to xMattersConfig
     * @param {Object} dataHelper data helper object; will default to xMattersDataHelper
     * @param {string} logTraceId the context identifier under which to log messages
     */
    initialize: function (config, dataHelper, logTraceId) {
        if (config &amp;&amp; config.type === 'xMattersConfig') {
            this.config = config;
        } else {
            this.config = new xMattersConfig();
        }

        this.log = new xMattersLogger(this.config.DEBUGGING, 'xMattersTask', logTraceId);

        if (dataHelper &amp;&amp; dataHelper.type === 'xMattersDataHelper') {
            this.dataHelper = dataHelper;
        } else {
            this.dataHelper = new xMattersDataHelper(this.config, this.dataHelper, this.log.getLogTraceId());
        }

        this.json = new global.JSON();
    },

    /**
     * @param rec current record
     * @param triggerRule String containing the trigger rule
     */
    addTask: function (rec, triggerRule) {
        try {
            var xmEvent = new xMattersEvent(this.config, this.dataHelper, this.log.getLogTraceId());

            // Add Incident Properties
            var parentIncident = new GlideRecord('incident');
            parentIncident.get(rec.parent_incident);
            xmEvent.addAllIncidentProperties(parentIncident);

            // Add task properties
            xmEvent.addProperty('task_message', rec.message);
            xmEvent.addProperty('task_number', rec.number);
            xmEvent.addProperty('task_priority', rec.send_priority);
            xmEvent.addProperty('task_message_subject', rec.message_subject);
            xmEvent.addProperty('task_state', rec.state);
            xmEvent.addProperty('task_escalation', rec.escalation);
            xmEvent.addProperty('task_sys_id', rec.sys_id);
			xmEvent.addProperty('task_chat', rec.chat);

            // Add additional properties
            xmEvent.addProperty('trigger', triggerRule);
            xmEvent.addProperty('servicenowurl', this.config.SNAPI.hostname);
            xmEvent.addProperty('xmatters_url', this.config.XMAPI.hostname);

            var recipients = rec.recipients.toString().split(',');
            for (var i = 0; i &lt; recipients.length; i++) {
                if (recipients[i] !== "") {
                    xmEvent.addRecipient(recipients[i]);
                }
            }

            var isConference = false;
            var confBridge = rec.conference_bridge.getDisplayValue();
            if (confBridge !== 'None') {
                isConference = true;
                if (confBridge === 'Hosted_New') {
                    xmEvent.addConferenceBridge(null);
                } else {
                    xmEvent.addConferenceBridge(confBridge);
                }
            }

            xmEvent.setPriority(rec.send_priority.getDisplayValue());
            if (isConference) {
                xmEvent.setWebserviceURL(this.config.ENGAGE.FORM.CONFERENCE);
            } else {
                xmEvent.setWebserviceURL(this.config.ENGAGE.FORM.ENGAGE);
            }
            xmEvent.send();

        } catch (e) {
            this.log.logException('addTask', e);
            throw e;
        }
    },

    /**
     * Terminates an incident in the xMatters (alarmpoint) Engine
     * @param rec current rec
     * @param triggerRule String containing the trigger rule
     */
    deleteTask: function (rec, triggerRule) {
        // Terminate the related events in xMatters
        try {
            var xMEvent = new xMattersEvent(this.config, this.dataHelper, this.log.getLogTraceId());
            xMEvent.terminateEvents('task_number', String(rec.number));
            return "[xMatters] - Terminated existing events for this Incident";

        } catch (e) {
            return "[xMatters] - Termination of events failed: " + this.json.encode(e);
        }
    }
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2015-02-09 19:57:33&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;38d205cb7b02f1008e0b707d784d4dad&lt;/sys_id&gt;&lt;sys_mod_count&gt;41&lt;/sys_mod_count&gt;&lt;sys_name&gt;xMattersTask&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_38d205cb7b02f1008e0b707d784d4dad&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-10-17 00:55:32&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>a9900d2adb710300739cf00fbf961926</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table/>
<target_name>xMattersTask</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_ui_script_e4c0f8824f6c220078bae321a310c7b6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description/&gt;&lt;global&gt;false&lt;/global&gt;&lt;name&gt;x_xma_xmatters.xm_app_engage_xmatters&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var engageApp = angular.module('xm.engage-xm', [ 'ngTagsInput', 'ngMessages', 'pascalprecht.translate', 'xm.xmatters-service', 'xm.location-service', 'xm.options-provider', 'xm.glide-ajax' ]);
 // Global configuration for ng tags input module 
engageApp.config(function(tagsInputConfigProvider) {
    tagsInputConfigProvider.setDefaults('tagsInput', {
        placeholder: 'Find Recipients',
        replaceSpacesWithDashes: false,
        addFromAutocompleteOnly: true,
        displayProperty: 'name',
        keyProperty : 'targetName'
    }).setDefaults('autoComplete', {
        displayProperty: 'name',
        minLength: 2
    });
});
// Configuration for translations
engageApp.config(function ($translateProvider) {
  $translateProvider.translations('en', {
    ENGAGE_XM: {
        TITLE: 'Engage with xMatters',
        LABEL: {
            RECIPIENTS: 'Recipients',
            SEND_PRIORITY: 'Priority',
            CONFERENCE_BRIDGE: 'Conference Bridge',
            SUBJECT: 'Subject',
            MESSAGE: 'Message'
        },
        BUTTON: {
            SUBMIT: 'Submit',
            CANCEL: 'Cancel',
            VIEW_RECORD: 'View Record'
        },
        ERROR: {
            REQUIRED: 'Required field',
            MAX_LENGTH: 'Maximum length {{max_length}} characters'
        },
        MESSAGE: {
            SUCCESS: 'Your request has been submitted successfully. To track the progress of this request in ServiceNow, view the Engage with xMatters record.'
        },
        OPTIONS: {
            CONFERENCE_BRIDGE: {
                'None': '-- None --',
                'External_Category': 'External Bridges',
                'Hosted_Category':   'xMatters Hosted Bridges',
                'Hosted_New': 'Create new'
            },
            SEND_PRIORITY: {
                "low": 'Low',
                "medium": 'Medium',
                "high": 'High'
            },
            RECIPIENT_TYPE: {
                "people": "People",
                "groups": "Groups"
            }
        }
    }
  });
  $translateProvider.preferredLanguage('en');
});
engageApp.controller('engageCtlr', 
    function($scope, $window, $translate, XMService, LocationService, OptionsProvider, GlideAjax) {
         // Core scope variables 
        $scope.is_finished = false; 
        $scope.is_invalid = false;
        $scope.global_errors = [];

         // form model scope variables and default values 
        $scope.subject = '';
        $scope.message = '';
        $scope.recipients = [];
        $scope.conference_bridge = 'None';
        $scope.send_priority = 'medium';
	
		$scope.chat = false;

         // result scope variable 
        $scope.engage_url = '';

         // behind the scenes scope variables used for options/state 
        $scope.xm_search_state = XMService.searchState;
        $scope.hosted_conference_bridge_options = OptionsProvider.hosted_conference_bridges;
        $scope.external_conference_bridge_options = OptionsProvider.external_conference_bridges;
        $scope.send_priority_options = OptionsProvider.send_priorities;
        $scope.recipientTypes = [ 
            {
                "label": "ENGAGE_XM.OPTIONS.RECIPIENT_TYPE.people",
                "typeahead": XMService.searchPeople
            }, 
            {
                "label": "ENGAGE_XM.OPTIONS.RECIPIENT_TYPE.groups",
                "typeahead": XMService.searchGroups
            } 
        ]; 
        $scope.activeRecipientType = $scope.recipientTypes[0];

        // Set the incident id scope variable based on search parameters in the url 
        $scope.incident_id = LocationService.searchParams.incident_id;
        if( typeof $scope.incident_id === 'undefined' || $scope.incident_id === null || $scope.incident_id === '' ) {
            console.log( 'No incident identifier was defined' );
            $scope.global_errors.push( 'Missing "incident_id" parameter: A valid ServiceNow Incident system id must be set to continue' );
        }

        /**
         * Changes the active recipient type based on the input group action dropdown selection
         * 
         * @param  {Integer} selectedType 
         *         index of the selected recipient option
         */
        $scope.selectRecipientType = function( selectedIndex ) {
            $scope.activeRecipientType = $scope.recipientTypes[selectedIndex];
        };
        
        var closeDialog = function(optionalMessage) {
            var data = {
                type: "DIALOG_CLOSE"
            };
            if(optionalMessage) {
                data.message = optionalMessage;
            }
            $window.parent.postMessage(data, window.location.origin);
        };
    
        $scope.cancel = function() {
            closeDialog();
        };

        /**
         * Submits the engageXMForm form, and if valid, tries to create a new Engage with xMatters record via
         * the xMattersAjaxEngage client callable script include.
         */
        $scope.submit = function() {
            $scope.engageXMForm.$setSubmitted( true );
            if( $scope.engageXMForm.$invalid ) {
                console.log( 'The form will not be submitted in an invalid state' );
                console.log( $scope.engageXMForm );
            } else {
                var recipientTargets = [];
                for( var i = 0; i &lt; $scope.recipients.length; i++ ) {
                    recipientTargets.push( $scope.recipients[i].targetName );
                }
                var formData = {
                    "recipients": recipientTargets.join( ',' ),
                    "subject": $scope.subject,
                    "message": $scope.message,
                    "conference_bridge": $scope.conference_bridge,
                    "incident_id": $scope.incident_id,
                    "send_priority": $scope.send_priority,
					"chat": $scope.chat
                };
				
				console.log( "Formdata: " + JSON.stringify( formData ) );
				
                var ga = new GlideAjax( 'xMattersAjaxEngage' );
                ga.addParam( 'sysparm_name', 'submitEngageWithXMatters' );
                ga.addParam( 'form_data', JSON.stringify( formData ) );
                ga.send().then( function( resp ) {
                    if( resp.success ) {
                        $translate('ENGAGE_XM.MESSAGE.SUCCESS').then(function(successMsg){
                            closeDialog(successMsg);
                        });
                        // replacing our complete page by closing the dialog for you
                        //$scope.is_finished = true;
                        //$scope.engage_url = '/nav_to.do?uri=x_xma_xmatters_engage_with_xmatters.do?sys_id=' + resp.data.sys_id;
                    } else {
                        console.log( resp );
                    }
                } ).catch( function( resp ){
                    console.log( resp );
                } );
            }
        };
    } );]]&gt;&lt;/script&gt;&lt;script_name&gt;xm_app_engage_xmatters&lt;/script_name&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-07-12 15:03:56&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;e4c0f8824f6c220078bae321a310c7b6&lt;/sys_id&gt;&lt;sys_mod_count&gt;9&lt;/sys_mod_count&gt;&lt;sys_name&gt;x_xma_xmatters.xm_app_engage_xmatters&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_e4c0f8824f6c220078bae321a310c7b6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-10-17 00:47:46&lt;/sys_updated_on&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>e1900d2adb710300739cf00fbf961927</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table/>
<target_name>x_xma_xmatters.xm_app_engage_xmatters</target_name>
<type>UI Script</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_3135421b4fba31008472a88ca310c777</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="" section_id="3135421b4fba31008472a88ca310c777" sys_domain="global" table="x_xma_xmatters_engage_with_xmatters" version="3" view=""><sys_ui_element action="INSERT_OR_UPDATE"><element>.begin_split</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>e51892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type>.begin_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>send_priority</element><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>291892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>state</element><position>2</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>691892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>conference_bridge</element><position>3</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>a91892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.split</element><position>4</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>e91892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type>.split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>parent_incident</element><position>5</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>2d1892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.end_split</element><position>6</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>6d1892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type>.end_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>message_subject</element><position>7</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>ad1892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>message</element><position>8</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>ed1892234fe082008472a88ca310c766</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>recipients</element><position>9</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>211892234fe082008472a88ca310c767</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>activity.xml</element><position>10</position><sys_created_by>admin</sys_created_by><sys_created_on>2015-06-15 22:03:50</sys_created_on><sys_id>611892234fe082008472a88ca310c767</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter display_value="Activities (filtered)">444ea5c6bf310100e628555b3f0739d6</sys_ui_formatter><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2015-06-15 22:03:50</sys_updated_on><sys_user/><type>formatter</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>chat</element><position>11</position><sys_created_by>admin</sys_created_by><sys_created_on>2017-10-17 00:36:12</sys_created_on><sys_id>c8b87466db710300739cf00fbf9619ac</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_xma_xmatters_engage_with_xmatters" sys_domain="global" view="Default view">3135421b4fba31008472a88ca310c777</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2017-10-17 00:36:12</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption/><header>false</header><name>x_xma_xmatters_engage_with_xmatters</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2015-03-20 02:13:01</sys_created_on><sys_customer_update>false</sys_customer_update><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>3135421b4fba31008472a88ca310c777</sys_id><sys_mod_count>1</sys_mod_count><sys_name>x_xma_xmatters_engage_with_xmatters</sys_name><sys_overrides/><sys_package display_value="xMatters" source="x_xma_xmatters">5950d7444f2231000e9fa88ca310c78c</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</sys_scope><sys_update_name>sys_ui_section_3135421b4fba31008472a88ca310c777</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2017-10-17 00:36:12</sys_updated_on><sys_user/><title>true</title><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>e1908daadb710300739cf00fbf9619e4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table>x_xma_xmatters_engage_with_xmatters</table>
<target_name>Engage with xMatters</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_documentation_x_xma_xmatters_engage_with_xmatters_chat_en</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_documentation element="chat" label="Chat" language="en" table="x_xma_xmatters_engage_with_xmatters"><sys_documentation action="INSERT_OR_UPDATE"><element>chat</element><help/><hint/><label>Chat</label><language>en</language><name>x_xma_xmatters_engage_with_xmatters</name><plural>Chats</plural><sys_class_name>sys_documentation</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2017-10-17 00:36:13</sys_created_on><sys_customer_update>true</sys_customer_update><sys_id>04b87866db710300739cf00fbf961902</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Chat</sys_name><sys_package display_value="xMatters" source="x_xma_xmatters">5950d7444f2231000e9fa88ca310c78c</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</sys_scope><sys_update_name>sys_documentation_x_xma_xmatters_engage_with_xmatters_chat_en</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2017-10-17 00:36:13</sys_updated_on><url/><url_target/></sys_documentation></sys_documentation></record_update>]]></payload>
<remote_update_set display_value="Add Chat to Engage">e9900d2adb710300739cf00fbf961925</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-10-17 01:10:43</sys_created_on>
<sys_id>e5900d2adb710300739cf00fbf961926</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-10-17 01:10:43</sys_updated_on>
<table>x_xma_xmatters_engage_with_xmatters</table>
<target_name>Engage with xMatters.Chat</target_name>
<type>Field Label</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
